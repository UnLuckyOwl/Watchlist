{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f01927c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n    const inputTextHandler = (e) => {\r\n        // console.log(e.target.value)\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault()\r\n        setTodos([\r\n            ...todos,\r\n            { text: inputText, completed: false, id: Math.random() * 1000 },\r\n        ])\r\n        setInputText('')\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <input\r\n                value={inputText}\r\n                onChange={inputTextHandler}\r\n                type=\"text\"\r\n                className=\"todo-input\"\r\n            />\r\n            <button\r\n                onClick={submitTodoHandler}\r\n                className=\"todo-button\"\r\n                type=\"submit\"\r\n            >\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select\r\n                    onChange={statusHandler}\r\n                    name=\"todos\"\r\n                    className=\"filter-todo\"\r\n                >\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    //Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id))\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodos(\r\n            todos.map((item) => {\r\n                if (item.id === todo.id) {\r\n                    return {\r\n                        ...item,\r\n                        completed: !item.completed,\r\n                    }\r\n                }\r\n                return item\r\n            }),\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>\r\n                {text}\r\n            </li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Todo\r\n","import React from 'react'\r\n//Import components\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo) => (\r\n                    <Todo\r\n                        setTodos={setTodos}\r\n                        todos={todos}\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        text={todo.text}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\n//Importing components\nimport Form from './components/Form'\nimport TodoList from './components/TodoList'\n\nfunction App() {\n    //State stuff\n    const [inputText, setInputText] = useState('')\n    const [todos, setTodos] = useState([])\n    const [status, setStatus] = useState('all')\n    const [filteredTodos, setFilteredTodos] = useState([])\n\n    // Run once when app starts\n    useEffect(() => {\n        getLocalTodos()\n    }, [])\n\n    //Use Effect\n    useEffect(() => {\n        const filterHandler = () => {\n            switch (status) {\n                case 'completed':\n                    setFilteredTodos(\n                        todos.filter((todo) => todo.completed === true),\n                    )\n\n                    break\n\n                case 'uncompleted':\n                    setFilteredTodos(\n                        todos.filter((todo) => todo.completed === false),\n                    )\n\n                    break\n\n                default:\n                    setFilteredTodos(todos)\n\n                    break\n            }\n        }\n        filterHandler()\n        saveLocalTodos()\n    }, [todos, status])\n\n    //Functions\n\n    //Save to local storage\n    const saveLocalTodos = () => {\n        localStorage.setItem('todos', JSON.stringify(todos))\n    }\n\n    const getLocalTodos = () => {\n        if (localStorage.getItem('todos') === null) {\n            localStorage.setItem('todos', JSON.stringify([]))\n        } else {\n            let todoLocal = JSON.parse(localStorage.getItem('todos'))\n            setTodos(todoLocal)\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Movie Watchlist</h1>\n            </header>\n            <Form\n                inputText={inputText}\n                todos={todos}\n                setTodos={setTodos}\n                setInputText={setInputText}\n                setStatus={setStatus}\n            />\n            <TodoList\n                setTodos={setTodos}\n                todos={todos}\n                filteredTodos={filteredTodos}\n            />\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}